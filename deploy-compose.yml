services:
  api:
    # build:
    #   context: .
    #   dockerfile: Dockerfile.multi
    #   target: api-build
    image: ghcr.io/danny-avila/librechat-dev-api:latest
    container_name: LibreChat-API
    ports:
      - 3080:3080
    depends_on:
      - mongodb
      - rag_api
    restart: always
    extra_hosts:
    - "host.docker.internal:host-gateway"
    env_file:
      - .env
    environment:
      - CREDS_KEY=${CREDS_KEY}
      - CREDS_IV=${CREDS_IV}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
      - RAG_OPENAI_API_KEY=${RAG_OPENAI_API_KEY}
      - NODE_ENV=${NODE_ENV}
    volumes:
      - /home/lewy/apps/LibreChat/librechat.yaml:/app/librechat.yaml
      - ./images:/app/client/public/images
      - ./logs:/app/api/logs
    networks:
      - proxy-network
      - app-network

  mongodb:
    container_name: chat-mongodb
    # ports:  # Uncomment this to access mongodb from outside docker, not safe in deployment
    #   - 27018:27017
    image: mongo
    restart: always
    volumes:
      - ./data-node:/data/db
    command: mongod --noauth
    env_file:
      - .env
    environment:
      - CREDS_KEY=${CREDS_KEY}
      - CREDS_IV=${CREDS_IV}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
      - RAG_OPENAI_API_KEY=${RAG_OPENAI_API_KEY}
    networks:
      - app-network

  meilisearch:
    container_name: chat-meilisearch
    image: getmeili/meilisearch:v1.7.3
    restart: always
    # ports: # Uncomment this to access meilisearch from outside docker
    #   - 7700:7700 # if exposing these ports, make sure your master key is not the default value
    env_file:
      - .env
    environment:
      - CREDS_KEY=${CREDS_KEY}
      - CREDS_IV=${CREDS_IV}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
      - RAG_OPENAI_API_KEY=${RAG_OPENAI_API_KEY}
    volumes:
      - ./meili_data_v1.7:/meili_data
    networks:
      - app-network

  vectordb:
    image: ankane/pgvector:latest
    env_file:
      - .env
    environment:
      - CREDS_KEY=${CREDS_KEY}
      - CREDS_IV=${CREDS_IV}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
      - RAG_OPENAI_API_KEY=${RAG_OPENAI_API_KEY}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    volumes:
      - pgdata2:/var/lib/postgresql/data
    networks:
      - app-network
      
  rag_api:
    image: ghcr.io/danny-avila/librechat-rag-api-dev-lite:latest
    env_file:
      - .env
    environment:
      - CREDS_KEY=${CREDS_KEY}
      - CREDS_IV=${CREDS_IV}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - MEILI_MASTER_KEY=${MEILI_MASTER_KEY}
      - RAG_OPENAI_API_KEY=${RAG_OPENAI_API_KEY}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: always
    depends_on:
      - vectordb
    networks:
      - app-network

volumes:
  pgdata2:

networks:
  app-network:
    name: librechat-network
  proxy-network:
    external: true
